<style>
  .contact_block_rich p {
    color: #1c1c1ccc;
    font-size: 14px;
    font-weight: 400;
    line-height: 19.6px;
  }
  form.contact-form {
    display: flex;
    flex-direction: column;
    row-gap: 2rem;
  }
  form.contact-form .form-field-wrapper {
    position: relative;
    height: 5.6rem;
  }
  form.contact-form .form-field-wrapper label {
    display: none;
  }
  form.contact-form .form-field-wrapper::placeholder {
    color: #1c1c1c99;
    opacity: 1 !important;
    font-weight: 400;
    font-family: General Sans;
  }
  form.contact-form .form-field-wrapper input,
  textarea,
  select {
    height: 100%;
    width: 100%;
    border-bottom: 0.12rem solid #1c1c1c1f !important;
    color: #1c1c1c99;

    font-family: General Sans;
    font-size: 16px;
    font-weight: 400;
    line-height: 22.4px;
  }
  form.contact-form .form-field-wrapper input,
  textarea {
    padding-left: 0.4rem;
  }
  form.contact-form .submit {
    margin-top: 1.2rem;
  }
  form.contact-form .submit input {
    padding: 1.6rem 0;
    width: 100%;
    border-radius: 8rem;
    background-color: #C33635;

    color: #FFF;
    text-align: center;
    font-family: General Sans;
    font-size: 1.6rem;
    font-style: normal;
    font-weight: 500;
    line-height: 2.24rem;
    border: none !important;
    cursor: pointer;
  }
  form.contact-form .submit input:disabled {
    pointer-events: none;
    cursor: none;
    background-color: #E19A9A;
    color: #ffffffcc;
  }
  @media screen and (min-width: 770px) {
    .contact_block_rich p {
      font-size: 16px;
      font-weight: 400;
      line-height: 22.4px;
    }
    form.contact-form .submit input {
      max-width: 20rem;
    }
    form.contact-form .form-field-wrapper {
      height: 7.2rem;
    }
    form.contact-form .form-field-wrapper input,
    textarea,
    select {
      font-size: 2.4rem;
      letter-spacing: -0.024rem;
      line-height: 3.36rem;
    }
  }
  .contact-form input[type="submit"] {
    font-family: "GeneralSans" !important;
    opacity: 1 !important;
  }
  .contact-form input:not([type="submit"]),
  .contact-form textarea,
  .contact-form select,
  input::placeholder,
  textarea::placeholder,
  select::placeholder {
    font-family: "GeneralSans" !important;
    opacity: 1 !important;
    color: #1c1c1c99 !important;
  }

  .email span,
  .first-name span,
  .message span,
  .hear-about span {
    display: none;
  }

  .email.error span,
  .first-name.error span,
  .message.error span {
    display: block;
  }
  .form-field-wrapper.email.error input,
  .form-field-wrapper.first-name.error input,
  .form-field-wrapper.message.error textarea {
    border-bottom: 0.12rem solid #C33635 !important;
  }

  p strong {
    font-weight: medium !important;
  }
</style>

<template id="success">
  <div class="px-4 flex flex-col gap-y-10 h-[44.5rem] items-center justify-center rounded-[2rem] bg-[#fff]">
    <div class="flex flex-col gap-y-6 items-center">
      <div class="flex flex-col gap-y-3">
        <h3 class="text-center text-[32px] font-medium lg:text-[56px] text-[#C33635]">Your first order <br> discount code is:      </h3>
        <p class="text-[23px] font-medium lg:text-[32px] text-center text-[#1C1C1CCC] underline">DISCOUNT25
        </p>
        <p class="text-base lg:text-2xl font-medium leading-[2.24rem] text-center text-[#1C1C1CCC]">Enter this code at checkout to redeem
      </p>
      <p class="text-sm lg:text-base font-normal leading-[2.24rem] text-center text-[#1C1C1CCC] opacity-80"><strong>TIP:</strong> Discount code can only be used once, but <br>there is no limit on first time purchase quantities.
    </p>
    <p class="text-sm lg:text-base font-normal leading-[2.24rem] text-center text-[#C33635]">Cannot be combined with any other offers

  </p>
      </div>
    </div>
  </div>
</template>

<div class="bg-[#CEB39E] pt-4 pb-8 px-2 md:py-12">
  <div class="page-width flex flex-col gap-y-10 bg-white rounded-[2.4rem] pt-8 pb-6 px-5 md:py-12 md:px-14 md:flex-row md:items-stretch md:gap-x-20">
    <div class="flex flex-col gap-y-10 w-full md:justify-between if-success-remove">
      <div>
        <h1 class="text-[#C33635] text-[3.2rem] font-medium leading-[3.84rem] -tracking-[0.064rem] mb-3 md:text-[5.6rem] md:leading-[6.16rem] md:-tracking-[0.112rem] md:mb-5">{{ section.settings.title }}</h1>
        <p class="text-base font-normal text-[#1c1c1c] md:text-2xl opacity-80 mt-[35px]">{{ section.settings.subtitle }}</p>
      </div>
    </div>
      <div class="w-full contact-form-wrapper">
      {% form 'customer' %}
        {{ form.errors | default_errors }}

        <div class="form-field-wrapper email">
          <label for="email">Email</label>
          <input
            type="email"
            class="font-['GeneralSans']"
            name="contact[email]"
            id="email"
            required="required"
            placeholder="Email" />
          <span class="text-sm font-normal leading-[19.6px] text-[#C33635] ml-1">Please, check the e-mail is valid</span>
        </div>

        <div class="form-field-wrapper first-name">
          <label for="age" class="font-['GeneralSans']">Age</label>
          <input
            type="text"
            name="contact[age]"
            id="age"
            class="font-['GeneralSans']"
            required="required"
            placeholder="Age" />
          <span class="text-sm font-normal leading-[19.6px] text-[#C33635] ml-1">Please, check if age is valid</span>
        </div>

        <div class="form-field-wrapper hear-about">
          <label for="hear-about" class="font-['GeneralSans']">How did you heard about Utiva?</label>
          <input
            type="text"
            name="contact[hear-about]"
            id="hear-about"
            class="font-['GeneralSans']"
            required="required"
            placeholder="How did you heard about Utiva?" />
          <span class="text-sm font-normal leading-[19.6px] text-[#C33635] ml-1">Please, check if text is valid</span>
        </div>

        <div class="form-field-wrapper message">
          <label for="message">Which doctor recommended?</label>
          <textarea
            name="contact[body]"
            id="message"
            class="font-['GeneralSans']"
            required="required"
            placeholder="Which doctor recommended?"></textarea>
          <span class="text-sm font-normal leading-[19.6px] text-[#C33635] ml-1">Please, check if message is valid</span>
        </div>

        <div class="submit">
          <input
            type="submit"
            class="font-['GeneralSans']"
            value="Get discount code"
            disabled />
        </div>

        {% if form.posted_successfully? %}
          <script>
            document.querySelector(".contact-form-wrapper").innerHTML = document.querySelector("template#success").innerHTML;
            document.querySelector(".if-success-remove").remove();
          </script>
        {% endif %}
      {% endform %}
    </div>
  </div>
</div>

<script>
  document.addEventListener("DOMContentLoaded", function() {
    const submitForm = document.getElementById("contact_form");
    const formFields = submitForm.querySelectorAll(".form-field-wrapper input, .form-field-wrapper textarea");
  
    // Event listener for each input field
    formFields.forEach(field => {
      field.addEventListener("input", () => {
        const emptyFields = [...formFields].filter(f => !f.value.trim());
        const submitButton = submitForm.querySelector(".submit input");
  
        if (emptyFields.length === 0) {
          submitButton.removeAttribute("disabled");
        } else {
          submitButton.setAttribute("disabled", true);
        }
      });
    });
  
    // Event listener for submit button
    submitForm.querySelector(".submit input").addEventListener("click", (e) => {
      e.preventDefault();
  
      // Validation logic
      let isValid = true;
  
      // Email validation
      const emailInput = submitForm.querySelector("input[type=email]");
      const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$/;
      if (!emailRegex.test(emailInput.value)) {
        emailInput.parentElement.classList.add("error");
        isValid = false;
      } else {
        emailInput.parentElement.classList.remove("error");
      }
  
      // Age validation (assuming it should be a number)
      const ageInput = submitForm.querySelector("input[name='contact[age]']");
      if (isNaN(ageInput.value) || ageInput.value.trim() === "") {
        ageInput.parentElement.classList.add("error");
        isValid = false;
      } else {
        ageInput.parentElement.classList.remove("error");
      }
  
      // Message validation (assuming any non-empty value is valid)
      const messageInput = submitForm.querySelector("textarea[name='contact[body]']");
      if (messageInput.value.trim() === "") {
        messageInput.parentElement.classList.add("error");
        isValid = false;
      } else {
        messageInput.parentElement.classList.remove("error");
      }
  
      if (isValid) {
        submitForm.submit();
      }
    });
  });
  
</script>

{% schema %}
  {
    "name": "Contact Form",
    "tag": "section",
    "settings": [
      {
        "type": "inline_richtext",
        "id": "title",
        "label": "Title"
      }, {
        "type": "inline_richtext",
        "id": "subtitle",
        "label": "Subtitle"
      }
    ],
    "blocks": [
      {
        "limit": 1,
        "name": "Address",
        "type": "address",
        "settings": [
          {
            "type": "richtext",
            "id": "content",
            "label": "Content"
          }
        ]
      }, {
        "limit": 1,
        "name": "Hours of Operation",
        "type": "hours_of_operation",
        "settings": [
          {
            "type": "richtext",
            "id": "content",
            "label": "Content"
          }
        ]
      }, {
        "limit": 1,
        "name": "E-mail",
        "type": "email",
        "settings": [
          {
            "type": "richtext",
            "id": "content",
            "label": "Content"
          }
        ]
      }, {
        "limit": 1,
        "name": "Phone",
        "type": "phone",
        "settings": [
          {
            "type": "richtext",
            "id": "content",
            "label": "Content"
          }
        ]
      }
    ]
  }
{% endschema %}