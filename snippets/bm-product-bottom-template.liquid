<div id="ProductSection-{{ section_id }}"
  class="bm-product-bottom-template product-section"
  data-section-id="{{ section_id }}"
  data-section-type="product-template"
  {% if isModal %}
    data-subsection
  {% endif %}
  data-variant-type="{{ variant_type }}"
  {% if inventory_enable %}
    data-inventory="true"
    data-inventory-threshold="{{ inventory_threshold }}"
  {% endif %}
  {% if inventory_transfers_enable %}
    data-incoming-inventory="true"
  {% endif %}
  {% if product_image_type == 'stacked' %}
    data-images-stacked="true"
  {% endif %}
  data-video-style="{{ video_style }}"
  {% unless isModal %}
    data-enable-history-state="true"
  {% endunless %}>

  {% include 'product-template-variables' %}

  <div class="page-content bm-product-bottom-template-content">
    <div class="page-width bm-product-template-width">
      <div class="grid">
        <div class="grid__item {{ product_image_width }}">
          {% include 'bm-product-images',
            section_id: section_id,
            isModal: isModal,
            video_looping: video_looping,
            video_style: video_style
          %}
        </div>

        <div class="grid__item {{ product_description_width }}{% if product_image_type == 'stacked' %} product-single__sticky{% endif %}">
          <div class="product-single__meta">
            <div class="product-single__header small--text-center">
              {% if settings.vendor_enable %}
                <div class="product-single__vendor">
                  {{ product.vendor }}
                </div>
              {% endif %}

              {% if sku_enable %}
                <p class="product-single__sku" data-sku>
                  {% if current_variant.sku %}
                    {{ current_variant.sku }}
                  {% endif %}
                </p>
              {% endif %}
              {% if isModal %}
                <p class="h2 product-single__title">
                  {{ product.title }}
                </p>
              {% else %}
                <h2 class="h2 product-single__title">
                  {{ product.title }}
                </h2>
              {% endif %}
              {% if section.settings.bm_enable_product_reviews == true %}
                {% unless product.metafields.bm_pdp.hide_pdp_main_review == true %}
                <div class="bm-product-review">
                  <span class="stamped-product-reviews-badge stamped-main-badge" data-id="{{ product.id }}" data-product-title="{{ product.title | escape }}" data-product-type="{{ product.type }}" style="display: block;" data-product-sku="{{ product.handle }}"></span>
                </div>
                {% endunless %}
              {% endif %}
              


              {%- if shop.taxes_included or shop.shipping_policy.body != blank -%}
                <div class="product__policies rte">
                  <small>
                    {%- if shop.taxes_included -%}
                      {{ 'products.product.include_taxes' | t }}
                    {%- endif -%}
                    {%- if shop.shipping_policy.body != blank -%}
                      {{ 'products.product.shipping_policy_html' | t: link: shop.shipping_policy.url }}
                    {%- endif -%}
                  </small>
                </div>
              {%- endif -%}

              {%- if inventory_enable or inventory_transfers_enable -%}
                {%- assign variants_with_inventory_tracking = product.variants | where: 'inventory_management', 'shopify' -%}

                <script>
                  // Store inventory quantities in JS because they're no longer
                  // available directly in JS when a variant changes.
                  // Have an object that holds all potential products so it works
                  // with quick view or with multiple featured products.
                  window.inventories = window.inventories || {};
                  window.inventories['{{section_id}}'] = {};
                   {% for variant in variants_with_inventory_tracking %}
                    window.inventories['{{section_id}}'][{{variant.id}}] = {
                      'quantity': {{ variant.inventory_quantity | default: 0 }},
                      'incoming': {{ variant.incoming | default: false | json }},
                      'next_incoming_date': {{ variant.next_incoming_date | date: format: 'date' | json }}
                    };
                   {% endfor %}
                </script>

                {%- assign inventory_visible = false -%}
                {% if inventory_enable and current_variant.inventory_management == 'shopify' %}
                  {%- if current_variant.inventory_quantity <= inventory_threshold and current_variant.inventory_quantity >= 0 -%}
                    {%- assign inventory_visible = true -%}
                  {%- endif -%}
                {% endif %}
                {% if current_variant.inventory_quantity == 0 %}
                  {%- assign inventory_visible = false -%}
                {% endif %}

                {%- if inventory_enable -%}
                  <p
                    data-product-inventory
                    class="product__inventory {% unless inventory_visible %}hide{% endunless %}"
                    >
                    {% if current_variant.available %}
                      {{ 'products.product.stock_label' | t: count: current_variant.inventory_quantity }}
                    {% endif %}
                  </p>
                {%- endif -%}

                {%- if inventory_transfers_enable -%}
                  <div
                    data-product-incoming-inventory
                    class="product__inventory{% if inventory_visible %} hide{% endif %}">
                    {%- if current_variant.incoming and inventory_visible == false -%}
                      {%- if current_variant.next_incoming_date -%}
                        {% assign date = current_variant.next_incoming_date | date: format: 'date' %}
                        {%- if current_variant.available -%}
                          {{ 'products.product.will_not_ship_until' | t: date: date }}
                        {%- else -%}
                          {{ 'products.product.will_be_in_stock_after' | t: date: date }}
                        {%- endif -%}
                      {%- else -%}
                        {{ 'products.product.waiting_for_stock' | t }}
                      {%- endif -%}
                    {%- endif -%}
                  </div>
                {%- endif -%}
              {% endif %}
            </div>

            {% unless isModal %}
              {% comment %}
                Shopify's product form attaches a number of tracking
                scripts that cause slower load times and false statistics.
                Quick view modals request these on-demand.
              {% endcomment %}
              {% include 'bm-product-form',
                section_id: section_id,
                variant_type: variant_type,
                variant_labels_enable: variant_labels_enable,
                quantity_enable: quantity_enable,
                enable_payment_button: enable_payment_button
              %}
            {% else %}
              <div
                id="ProductFormPlaceholder-{{ section_id }}"
                data-url="{{ product.url | within: collection }}"
                data-template="{{ product.template_suffix }}"
                class="product-form-holder">
                {% if product.options.size > 0 %}
                  {% for i in (1..product.options.size) %}
                    <div class="placeholder-content" style="min-height: 86px; max-width: 66%;"></div>
                  {% endfor %}
                {% endif %}
                <div class="placeholder-content" style="min-height: 86px;"></div>
              </div>
            {% endunless %}

            {%- if settings.trust_image != blank -%}
              <div class="aos-animate trust-image" style="max-width: {{ settings.trust_image.width }}px;">
                <div class="image-wrap " style="height: 0; padding-bottom: {{ 100 | divided_by: settings.trust_image.aspect_ratio }}%;">
                  {%- assign img_url = settings.trust_image | img_url: '1x1' | replace: '_1x1.', '_{width}x.' -%}
                  <img class="lazyload"
                      data-src="{{ img_url }}"
                      data-widths="[360, 540]"
                      data-aspectratio="{{ settings.trust_image.aspect_ratio }}"
                      data-sizes="auto"
                      alt="{{ settings.trust_image.alt }}">
                  <noscript>
                    <img class="lazyloaded" src="{{ settings.trust_image | img_url: '540x' }}" alt="{{ settings.trust_image.alt }}">
                  </noscript>
                </div>
              </div>
            {%- endif -%}

            

            {% if social_enable %}
              {% include 'social-sharing', share_title: product.title, share_permalink: product.url, share_image: product %}
            {% endif %}
          </div>
        </div>
      </div>

    </div>
  </div>
</div>


<style>
  
</style>


<script>
  $(document).ready(function(){
    
    // update saving message on page load
    if($('#shopify-section-bm-control-template .product__price').hasClass('sale-price')) {
      var originalPrice = $('#shopify-section-bm-control-template .product__price.product__price--compare').text().trim().replace('$','');
      var salePrice = $('#shopify-section-bm-control-template .product__price.sale-price').text().trim().replace('$','');

      var savePrice = Math.abs(originalPrice - salePrice).toFixed(2);
      $('.bm-you-save').text('You Save $' + savePrice);
    }
    
    
    // Qty adjustment
    var qtyAdjust = $('.quantity-nav .quantity-button');
    var currentQty = parseInt($('[name="quantity"]').val());
    
    $(qtyAdjust).click(function(){
      if($(this).hasClass('quantity-up')) {
        currentQty++;
        $('[name="quantity"]').val(currentQty);
      } else {
        if(currentQty > 1) {
          currentQty--;
          $('[name="quantity"]').val(currentQty);
        }
      }
    });
    
    
    // Bottom product variation selection update id
    $('#shopify-section-bm-control-template-bottom .variant-input').on('click', function(e){
      e.preventDefault();
      
      $(this).find('input').prop("checked", true);
      var id = $(this).find('input').attr("id");
      
      $('#shopify-section-bm-control-template .variant-input').each(function(){
      	var $input = $(this).find('input');
        
        if ($input.attr("id") == id) {
          $input.prop("checked", true);
          $input.trigger("change");
        }
      });
    });
    
    // Update saving price + product bottom price
    $("#shopify-section-bm-control-template span.product__price").bind("DOMSubtreeModified", function() {
      $('.bm-you-save').text('');

      setTimeout(function(){
        if($('#shopify-section-bm-control-template .product__price').hasClass('sale-price')) {
          var originalPrice = $('#shopify-section-bm-control-template .product__price.product__price--compare').text().trim().replace('$','');
          var salePrice = $('#shopify-section-bm-control-template .product__price.sale-price').text().trim().replace('$','');

          var savePrice = Math.abs(originalPrice - salePrice).toFixed(2);
          $('.bm-you-save').text('You Save $' + savePrice);
        }
		
        // update product bottom price
        var productPrice = $('#shopify-section-bm-control-template .product-single__prices > div');
        $('#shopify-section-bm-control-template-bottom .product-single__prices').html($(productPrice).clone());
      }, 10);
    });
    
    
    // start rc form price sync
    $("#shopify-section-bm-control-template-bottom #rc_container .rc_block input").click(function(){
      setTimeout(function(){
        var rcOnetimeprice = $('#shopify-section-bm-control-template #rc_price_onetime').text();
        var rcSubprice = $('#shopify-section-bm-control-template #rc_price_autodeliver').text();

        $('#shopify-section-bm-control-template-bottom #rc_price_onetime').text(rcOnetimeprice);
        $('#shopify-section-bm-control-template-bottom #rc_price_autodeliver').text(rcSubprice);
      }, 50);
    })
    
    $("#shopify-section-bm-control-template #rc_container").bind("DOMSubtreeModified", function() {
      setTimeout(function(){
        var rcOnetimeprice = $('#shopify-section-bm-control-template #rc_price_onetime').text();
        var rcSubprice = $('#shopify-section-bm-control-template #rc_price_autodeliver').text();

        $('#shopify-section-bm-control-template-bottom #rc_price_onetime').text(rcOnetimeprice);
        $('#shopify-section-bm-control-template-bottom #rc_price_autodeliver').text(rcSubprice);
      }, 50);
    });
    // end rc form price sync
    
    
    // sync variation option selection
    $('.variant-input').click(function(e){
      var id = $(this).find('input').attr('id');
      
      $('.variant-input').each(function(i, el){
        if($(el).find('input').attr('id') == id) {
          if (e.originalEvent !== undefined) {
            $(el).click();
            var topID = $('[js-top-product-id]').find(':selected').val();
            $('[js-bottom-product-id]').val(topID).trigger('change');
          }
        }
      })
    });
    
    // ACT Trigger
    $('#shopify-section-bm-control-template-bottom button.add-to-cart').on('click', function(e){
      e.preventDefault();
      
      $('#shopify-section-bm-control-template button.add-to-cart').click();
    });
    
  });
</script>